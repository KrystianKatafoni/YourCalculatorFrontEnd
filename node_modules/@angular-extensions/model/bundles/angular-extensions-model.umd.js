(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs'), require('rxjs/operators')) :
    typeof define === 'function' && define.amd ? define('@angular-extensions/model', ['exports', '@angular/core', 'rxjs', 'rxjs/operators'], factory) :
    (factory((global['angular-extensions'] = global['angular-extensions'] || {}, global['angular-extensions'].model = {}),global.ng.core,global.rxjs,global.rxjs.operators));
}(this, (function (exports,i0,rxjs,operators) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    /**
     * @template T
     */
    var /**
     * @template T
     */ Model = /** @class */ (function () {
        function Model(initialData, immutable, sharedSubscription, clone) {
            this._data = new rxjs.BehaviorSubject(initialData);
            this.data$ = this._data.asObservable().pipe(operators.map(function (data) {
                return immutable
                    ? clone
                        ? clone(data)
                        : JSON.parse(JSON.stringify(data))
                    : data;
            }), sharedSubscription ? operators.shareReplay(1) : operators.map(function (data) { return data; }));
        }
        /**
         * @return {?}
         */
        Model.prototype.get = /**
         * @return {?}
         */
            function () {
                return this._data.getValue();
            };
        /**
         * @param {?} data
         * @return {?}
         */
        Model.prototype.set = /**
         * @param {?} data
         * @return {?}
         */
            function (data) {
                this._data.next(data);
            };
        return Model;
    }());
    /**
     * @template T
     */
    var ModelFactory = /** @class */ (function () {
        function ModelFactory() {
        }
        /**
         * @param {?} initialData
         * @return {?}
         */
        ModelFactory.prototype.create = /**
         * @param {?} initialData
         * @return {?}
         */
            function (initialData) {
                return new Model(initialData, true, false);
            };
        /**
         * @param {?} initialData
         * @return {?}
         */
        ModelFactory.prototype.createMutable = /**
         * @param {?} initialData
         * @return {?}
         */
            function (initialData) {
                return new Model(initialData, false, false);
            };
        /**
         * @param {?} initialData
         * @return {?}
         */
        ModelFactory.prototype.createMutableWithSharedSubscription = /**
         * @param {?} initialData
         * @return {?}
         */
            function (initialData) {
                return new Model(initialData, false, true);
            };
        /**
         * @param {?} initialData
         * @param {?} clone
         * @return {?}
         */
        ModelFactory.prototype.createWithCustomClone = /**
         * @param {?} initialData
         * @param {?} clone
         * @return {?}
         */
            function (initialData, clone) {
                return new Model(initialData, true, false, clone);
            };
        ModelFactory.decorators = [
            { type: i0.Injectable, args: [{
                        providedIn: 'root'
                    },] }
        ];
        /** @nocollapse */ ModelFactory.ngInjectableDef = i0.defineInjectable({ factory: function ModelFactory_Factory() { return new ModelFactory(); }, token: ModelFactory, providedIn: "root" });
        return ModelFactory;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */

    exports.Model = Model;
    exports.ModelFactory = ModelFactory;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=angular-extensions-model.umd.js.map