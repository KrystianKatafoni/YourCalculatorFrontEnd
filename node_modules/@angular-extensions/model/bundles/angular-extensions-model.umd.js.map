{"version":3,"file":"angular-extensions-model.umd.js.map","sources":["ng://@angular-extensions/model/model.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\nexport class Model<T> {\n  private _data: BehaviorSubject<T>;\n\n  data$: Observable<T>;\n\n  constructor(\n    initialData: any,\n    immutable: boolean,\n    sharedSubscription: boolean,\n    clone?: (data: T) => T\n  ) {\n    this._data = new BehaviorSubject(initialData);\n    this.data$ = this._data.asObservable().pipe(\n      map(\n        (data: T) =>\n          immutable\n            ? clone\n              ? clone(data)\n              : JSON.parse(JSON.stringify(data))\n            : data\n      ),\n      sharedSubscription ? shareReplay(1) : map((data: T) => data)\n    );\n  }\n\n  get(): T {\n    return this._data.getValue();\n  }\n\n  set(data: T) {\n    this._data.next(data);\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModelFactory<T> {\n  create(initialData: T): Model<T> {\n    return new Model<T>(initialData, true, false);\n  }\n\n  createMutable(initialData: T): Model<T> {\n    return new Model<T>(initialData, false, false);\n  }\n\n  createMutableWithSharedSubscription(initialData: T): Model<T> {\n    return new Model<T>(initialData, false, true);\n  }\n\n  createWithCustomClone(initialData: T, clone: (data: T) => T) {\n    return new Model<T>(initialData, true, false, clone);\n  }\n}\n"],"names":["BehaviorSubject","map","shareReplay","Injectable"],"mappings":";;;;;;;;;;AAAA;;;AAIA;;QAAA;QAKE,eACE,WAAgB,EAChB,SAAkB,EAClB,kBAA2B,EAC3B,KAAsB;YAEtB,IAAI,CAAC,KAAK,GAAG,IAAIA,oBAAe,CAAC,WAAW,CAAC,CAAC;YAC9C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,IAAI,CACzCC,aAAG,CACD,UAAC,IAAO;gBACN,OAAA,SAAS;sBACL,KAAK;0BACH,KAAK,CAAC,IAAI,CAAC;0BACX,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;sBAClC,IAAI;aAAA,CACX,EACD,kBAAkB,GAAGC,qBAAW,CAAC,CAAC,CAAC,GAAGD,aAAG,CAAC,UAAC,IAAO,IAAK,OAAA,IAAI,GAAA,CAAC,CAC7D,CAAC;SACH;;;;QAED,mBAAG;;;YAAH;gBACE,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;aAC9B;;;;;QAED,mBAAG;;;;YAAH,UAAI,IAAO;gBACT,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACvB;oBAnCH;QAoCC,CAAA;;;;;;;;;;;QAMC,6BAAM;;;;YAAN,UAAO,WAAc;gBACnB,OAAO,IAAI,KAAK,CAAI,WAAW,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;aAC/C;;;;;QAED,oCAAa;;;;YAAb,UAAc,WAAc;gBAC1B,OAAO,IAAI,KAAK,CAAI,WAAW,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;aAChD;;;;;QAED,0DAAmC;;;;YAAnC,UAAoC,WAAc;gBAChD,OAAO,IAAI,KAAK,CAAI,WAAW,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;aAC/C;;;;;;QAED,4CAAqB;;;;;YAArB,UAAsB,WAAc,EAAE,KAAqB;gBACzD,OAAO,IAAI,KAAK,CAAI,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;aACtD;;oBAlBFE,aAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;2BAxCD;;;;;;;;;;;;;;;;;;;"}
